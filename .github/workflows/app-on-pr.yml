name: App on PR

on:
  workflow_call:

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  semgrep:
    name: semgrep
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      security-events: write
    container:
      image: semgrep/semgrep@sha256:46c44b623972875ebc6273adb3d725f0411f81b52f8e077aabf21629a6190c39 # v1.135.0
      options: --user root

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Run semgrep
        uses: ./.github/actions/semgrep
        with:
          dir: 'app'

  trivy-code-scan:
    name: trivy-code-scan
    needs: semgrep
    runs-on: ubuntu-24.04

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install Trivy
        uses: aquasecurity/setup-trivy@e6c2c5e321ed9123bda567646e2f96565e34abe1 # v0.2.4
        with:
          version: v0.67.0
          cache: true

      - name: Run Trivy vulnerability scanner in fs mode
        uses: ./.github/actions/trivy
        with:
          scan-type: 'fs'
          scan-ref: 'app'
          format: 'table'

  pytest:
    name: pytest
    needs: trivy-code-scan
    runs-on: ubuntu-24.04

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version-file: "app/pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
        with:
          version: "0.8.15"
          enable-cache: true
          cache-dependency-glob: |
            app/pyproject.toml
            app/uv.lock

      - name: Install dependencies
        working-directory: app
        run: |
          uv sync --locked --all-extras --dev

      - name: Test with pytest
        working-directory: app
        run: |
          uv run pytest tests

  docker:
    name: docker
    needs: pytest
    uses: ./.github/workflows/app-docker.yml
    with:
      dir: 'app'
    permissions:
      actions: read
      packages: write
      security-events: write
