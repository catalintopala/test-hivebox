name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  get-changed-dirs:
    runs-on: ubuntu-24.04
    outputs:
      changed_dirs: ${{ steps.get_changed_dirs.outputs.changed_dirs }}
      dir_count: ${{ steps.dir_count.outputs.dir_count }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Fetch remote branches
        run: >-
          git fetch --no-tags --prune --depth=1 origin
          +refs/heads/*:refs/remotes/origin/*

      - name: Get changed directories
        id: get_changed_dirs
        env:
          BASE_REF: ${{ github.base_ref }}
          SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          git diff --name-only origin/"$BASE_REF" "$SHA" | awk -F/ '{print $1}' | sort -u | xargs > changed_dirs.txt

      - name: Count number of modified directories
        id: dir_count
        run: |
          wc -l changed_dirs.txt | awk '{print $1}' > dir_count.txt

      - name: Upload file with changed dirs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: changed_dirs_and_dir_count
          path: |
            changed_dirs.txt
            dir_count.txt

  pre-commit:
    needs: get-changed-dirs
    permissions:
      contents: write
    runs-on: ubuntu-24.04

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Download changed dirs file
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: changed_dirs_and_dir_count

      - name: Check if only one dir from the monorepo was modified, except .github and root
        shell: python
        run: |
          import sys

          def check_files(changed_dirs, dir_count):
            projects = ["app"]

            with open(changed_dirs, 'r') as cd:
              dirs = cd.read().splitlines()

            with open(dir_count, 'r') as dc:
              count = int(dc.read().strip())

            if any(project in dirs for project in projects):
              if count != 1:
                sys.exit(1)

          check_files('changed_dirs.txt', 'dir_count.txt')

      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup Python 3.13
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
        with:
          version: "0.8.15"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install pre-commit
        run: uv tool install pre-commit

      - name: Cache pre-commit dependencies
        id: cache_pre_commit
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3.4.3
        env:
          cache-name: cache-pre-commit
        with:
          path: ~/.cache/pre-commit
          key: ${{ env.cache-name }}-${{ hashFiles('.pre-commit-config.yaml', '~/.cache/pre-commit/*') }}

      - name: Install pre-commit hooks
        if: steps.cache_pre_commit.outputs.cache-hit != 'true'
        run: |
          pre-commit install
          pre-commit gc

      # Only install if the directory is 'app', as it is the only directory expected to have a Dockerfile
      - name: Install hadolint
        if:
          needs.get-changed-dirs.outputs.dir_count == 1 &&
          contains(needs.get-changed-dirs.outputs.changed_dirs, 'app')
        run: >-
          curl -L "$(
          curl -s https://api.github.com/repos/hadolint/hadolint/releases/latest
          | grep -o -E -i -m 1 "https://.+?/hadolint-linux-x86_64"
          )"
          > hadolint
          && chmod +x hadolint && sudo mv hadolint /usr/bin/

      # Needed for re-running this workflow on the autofix commit.
      - name: Check out again for pre-commit
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.TEST_HIVEBOX_AUTOFIX_COMMIT_KEY }}

      - name: Run pre-commit hooks
        env:
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          SHA: ${{ github.event.pull_request.head.sha }}
        run: >-
          pre-commit run
          --from-ref origin/"$BASE_REF"
          --to-ref "$SHA"
          --color=always
          --show-diff-on-failure

      - name: Push fixes
        if: failure()
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5  # v9.1.4
        with:
          default_author: github_actions
          message: "[pre-commit] Autofix violations"

  app:
    needs:
      - get-changed-dirs
      - pre-commit
    if:
      needs.get-changed-dirs.outputs.dir_count == 1 &&
      contains(needs.get-changed-dirs.outputs.changed_dirs, 'app')
    uses: ./.github/workflows/app.yaml
    permissions:
      actions: read
      contents: read
      security-events: write
